/*
 * Copyright (c) 2019 zhtlab
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files
 * (the "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to permit
 * persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be included
 * in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#ifndef _STM32USBPHYC_H_
#define _STM32USBPHYC_H_

typedef struct {
  __IO uint32_t         PLL1;
#define USBPHYC_PLL1_EN_SHIFT           (0)
#define USBPHYC_PLL1_EN_MASK            (1 << (USBPHYC_PLL1_EN_SHIFT))
#define USBPHYC_PLL1_EN_NO              (0 << (USBPHYC_PLL1_EN_SHIFT))
#define USBPHYC_PLL1_EN_YES             (1 << (USBPHYC_PLL1_EN_SHIFT))
#define USBPHYC_PLL1_SEL_SHIFT          (1)
#define USBPHYC_PLL1_SEL_MASK           (7 << (USBPHYC_PLL1_SEL_SHIFT))
#define USBPHYC_PLL1_SEL_12MHZ          (0 << (USBPHYC_PLL1_SEL_SHIFT))
#define USBPHYC_PLL1_SEL_12_5MHZ        (1 << (USBPHYC_PLL1_SEL_SHIFT))
  //#define USBPHYC_PLL1_SEL_12_5MHZ        (2 << (USBPHYC_PLL1_SEL_SHIFT))
#define USBPHYC_PLL1_SEL_16MHZ          (3 << (USBPHYC_PLL1_SEL_SHIFT))
#define USBPHYC_PLL1_SEL_24MHZ          (4 << (USBPHYC_PLL1_SEL_SHIFT))
#define USBPHYC_PLL1_SEL_25MHZ          (5 << (USBPHYC_PLL1_SEL_SHIFT))
  //#define USBPHYC_PLL1_SEL_25MHZ          (6 << (USBPHYC_PLL1_SEL_SHIFT))

  uint32_t              reserved04;
  uint32_t              reserved08;

  __IO uint32_t         TUNE;
#define USBPHYC_TUNE_SQLBYP_SHIFT      (23)
#define USBPHYC_TUNE_SQLBYP_MASK       (1 << (USBPHYC_TUNE_SQLBYP_SHIFT))
#define USBPHYC_TUNE_SQLBYP_NO         (0 << (USBPHYC_TUNE_SQLBYP_SHIFT))
#define USBPHYC_TUNE_SQLBYP_YES        (1 << (USBPHYC_TUNE_SQLBYP_SHIFT))
#define USBPHYC_TUNE_SHTCCTCTLPROT_SHIFT      (22)
#define USBPHYC_TUNE_SHTCCTCTLPROT_MASK       (1 << (USBPHYC_TUNE_SHTCCTCTLPROT_SHIFT))
#define USBPHYC_TUNE_SHTCCTCTLPROT_NO         (0 << (USBPHYC_TUNE_SHTCCTCTLPROT_SHIFT))
#define USBPHYC_TUNE_SHTCCTCTLPROT_YES        (1 << (USBPHYC_TUNE_SHTCCTCTLPROT_SHIFT))
#define USBPHYC_TUNE_HSRXOFF_SHIFT      (20)
#define USBPHYC_TUNE_HSRXOFF_MASK       (3 << (USBPHYC_TUNE_HSRXOFF_SHIFT))
#define USBPHYC_TUNE_HSRXOFF_OFF        (0 << (USBPHYC_TUNE_HSRXOFF_SHIFT))
#define USBPHYC_TUNE_HSRXOFF_P5MV       (1 << (USBPHYC_TUNE_HSRXOFF_SHIFT))
#define USBPHYC_TUNE_HSRXOFF_P10MV      (2 << (USBPHYC_TUNE_HSRXOFF_SHIFT))
#define USBPHYC_TUNE_HSRXOFF_M5MV       (3 << (USBPHYC_TUNE_HSRXOFF_SHIFT))

#define USBPHYC_TUNE_HSFALLPREEM_SHIFT  (19)
#define USBPHYC_TUNE_HSFALLPREEM_MASK   (1 << (USBPHYC_TUNE_HSFALLPREEM_SHIFT))
#define USBPHYC_TUNE_HSFALLPREEM_NO     (0 << (USBPHYC_TUNE_HSFALLPREEM_SHIFT))
#define USBPHYC_TUNE_HSFALLPREEM_YES    (1 << (USBPHYC_TUNE_HSFALLPREEM_SHIFT))
#define USBPHYC_TUNE_STAGSEL_SHIFT      (18)
#define USBPHYC_TUNE_STAGSEL_MASK       (1 << (USBPHYC_TUNE_STAGSEL_SHIFT))
#define USBPHYC_TUNE_STAGSEL_NO         (0 << (USBPHYC_TUNE_STAGSEL_SHIFT))
#define USBPHYC_TUNE_STAGSEL_YES        (1 << (USBPHYC_TUNE_STAGSEL_SHIFT))
#define USBPHYC_TUNE_HFRXGNEQEN_SHIFT   (17)
#define USBPHYC_TUNE_HFRXGNEQEN_MASK    (1 << (USBPHYC_TUNE_HFRXGNEQEN_SHIFT))
#define USBPHYC_TUNE_HFRXGNEQEN_NO      (0 << (USBPHYC_TUNE_HFRXGNEQEN_SHIFT))
#define USBPHYC_TUNE_HFRXGNEQEN_YES     (1 << (USBPHYC_TUNE_HFRXGNEQEN_SHIFT))
#define USBPHYC_TUNE_SQLCHCTL_SHIFT     (15)
#define USBPHYC_TUNE_SQLCHCTL_MASK      (3 << (USBPHYC_TUNE_SQLCHCTL_SHIFT))
#define USBPHYC_TUNE_SQLCHCTL_NO        (0 << (USBPHYC_TUNE_SQLCHCTL_SHIFT))
#define USBPHYC_TUNE_SQLCHCTL_M5MV      (1 << (USBPHYC_TUNE_SQLCHCTL_SHIFT))
#define USBPHYC_TUNE_SQLCHCTL_P7MV      (0 << (USBPHYC_TUNE_SQLCHCTL_SHIFT))
#define USBPHYC_TUNE_SQLCHCTL_P14MV     (1 << (USBPHYC_TUNE_SQLCHCTL_SHIFT))
#define USBPHYC_TUNE_HSDRVCHKZTRM_SHIFT (15)
#define USBPHYC_TUNE_HSDRVCHKZTRM_MASK  (1 << (USBPHYC_TUNE_HSDRVCHKZTRM_SHIFT))
#define USBPHYC_TUNE_HSDRVCHKZTRM_0OHM  (0 << (USBPHYC_TUNE_HSDRVCHKZTRM_SHIFT))
#define USBPHYC_TUNE_HSDRVCHKZTRM_2OHM  (1 << (USBPHYC_TUNE_HSDRVCHKZTRM_SHIFT))
#define USBPHYC_TUNE_HSDRVCHKZTRM_4OHM  (0 << (USBPHYC_TUNE_HSDRVCHKZTRM_SHIFT))
#define USBPHYC_TUNE_HSDRVCHKZTRM_6OHM  (1 << (USBPHYC_TUNE_HSDRVCHKZTRM_SHIFT))
#define USBPHYC_TUNE_HSDRVCHKITRM_SHIFT (9)
#define USBPHYC_TUNE_HSDRVCHKITRM_MASK  (15 << (USBPHYC_TUNE_HSDRVCHKITRM_SHIFT))
#define USBPHYC_TUNE_HSDRVCHKITRM_18_87MA ( 0 << (USBPHYC_TUNE_HSDRVCHKITRM_SHIFT))
#define USBPHYC_TUNE_HSDRVCHKITRM_19_17MA ( 1 << (USBPHYC_TUNE_HSDRVCHKITRM_SHIFT))
#define USBPHYC_TUNE_HSDRVCHKITRM_20_94MA ( 7 << (USBPHYC_TUNE_HSDRVCHKITRM_SHIFT))
#define USBPHYC_TUNE_HSDRVCHKITRM_23_35MA (15 << (USBPHYC_TUNE_HSDRVCHKITRM_SHIFT))
#define USBPHYC_TUNE_HSDRVRFRED_SHIFT   (8)
#define USBPHYC_TUNE_HSDRVRFRED_MASK    (1 << (USBPHYC_TUNE_HSDRVRFRED_SHIFT))
#define USBPHYC_TUNE_HSDRVRFRED_DEFAULT (0 << (USBPHYC_TUNE_HSDRVRFRED_SHIFT))
#define USBPHYC_TUNE_HSDRVRFRED_INC20PER (1 << (USBPHYC_TUNE_HSDRVRFRED_SHIFT))
#define USBPHYC_TUNE_FSDRVRFADJ_SHIFT   (7)
#define USBPHYC_TUNE_FSDRVRFADJ_MASK    (1 << (USBPHYC_TUNE_FSDRVRFADJ_SHIFT))
#define USBPHYC_TUNE_FSDRVRFADJ_NO      (0 << (USBPHYC_TUNE_FSDRVRFADJ_SHIFT))
#define USBPHYC_TUNE_FSDRVRFADJ_YES     (1 << (USBPHYC_TUNE_FSDRVRFADJ_SHIFT))
#define USBPHYC_TUNE_HSDRVCURINCR_SHIFT (6)
#define USBPHYC_TUNE_HSDRVCURINCR_MASK  (1 << (USBPHYC_TUNE_HSDRVCURINCR_SHIFT))
#define USBPHYC_TUNE_HSDRVCURINCR_NO    (0 << (USBPHYC_TUNE_HSDRVCURINCR_SHIFT))
#define USBPHYC_TUNE_HSDRVCURINCR_YES   (1 << (USBPHYC_TUNE_HSDRVCURINCR_SHIFT))
#define USBPHYC_TUNE_HSDRVDCLEV_SHIFT   (5)
#define USBPHYC_TUNE_HSDRVDCLEV_MASK    (1 << (USBPHYC_TUNE_HSDRVDCLEV_SHIFT))
#define USBPHYC_TUNE_HSDRVDCLEV_5MV     (0 << (USBPHYC_TUNE_HSDRVDCLEV_SHIFT))
#define USBPHYC_TUNE_HSDRVDCLEV_10MV    (1 << (USBPHYC_TUNE_HSDRVDCLEV_SHIFT))
#define USBPHYC_TUNE_HSDRVDCCUR_SHIFT   (4)
#define USBPHYC_TUNE_HSDRVDCCUR_MASK    (1 << (USBPHYC_TUNE_HSDRVDCCUR_SHIFT))
#define USBPHYC_TUNE_HSDRVDCCUR_NORMAL  (0 << (USBPHYC_TUNE_HSDRVDCCUR_SHIFT))
#define USBPHYC_TUNE_HSDRVDCCUR_DEC5MV  (1 << (USBPHYC_TUNE_HSDRVDCCUR_SHIFT))
#define USBPHYC_TUNE_HSDRVSLEW_SHIFT    (3)
#define USBPHYC_TUNE_HSDRVSLEW_MASK     (1 << (USBPHYC_TUNE_HSDRVSLEW_SHIFT))
#define USBPHYC_TUNE_HSDRVSLEW_NO       (0 << (USBPHYC_TUNE_HSDRVSLEW_SHIFT))
#define USBPHYC_TUNE_HSDRVSLEW_YES      (1 << (USBPHYC_TUNE_HSDRVSLEW_SHIFT))
#define USBPHYC_TUNE_LFSCAPEN_SHIFT     (2)
#define USBPHYC_TUNE_LFSCAPEN_MASK      (1 << (USBPHYC_TUNE_LFSCAPEN_SHIFT))
#define USBPHYC_TUNE_LFSCAPEN_NO        (0 << (USBPHYC_TUNE_LFSCAPEN_SHIFT))
#define USBPHYC_TUNE_LFSCAPEN_YES       (1 << (USBPHYC_TUNE_LFSCAPEN_SHIFT))
#define USBPHYC_TUNE_INCURRINT_SHIFT    (1)
#define USBPHYC_TUNE_INCURRINT_MASK     (1 << (USBPHYC_TUNE_INCURRINT_SHIFT))
#define USBPHYC_TUNE_INCURRINT_NO       (0 << (USBPHYC_TUNE_INCURRINT_SHIFT))
#define USBPHYC_TUNE_INCURRINT_YES      (1 << (USBPHYC_TUNE_INCURRINT_SHIFT))
#define USBPHYC_TUNE_INCURREN_SHIFT     (0)
#define USBPHYC_TUNE_INCURREN_MASK      (1 << (USBPHYC_TUNE_INCURREN_SHIFT))
#define USBPHYC_TUNE_INCURREN_NO        (0 << (USBPHYC_TUNE_INCURREN_SHIFT))
#define USBPHYC_TUNE_INCURREN_YES       (1 << (USBPHYC_TUNE_INCURREN_SHIFT))

  uint32_t              reserved10;
  uint32_t              reserved14;

  __IO uint32_t         LDO;
#define USBPHYC_LDO_ENABLE_SHIFT        (2)
#define USBPHYC_LDO_ENABLE_MASK         (1 << (USBPHYC_LDO_ENABLE_SHIFT))
#define USBPHYC_LDO_ENABLE_NO           (0 << (USBPHYC_LDO_ENABLE_SHIFT))
#define USBPHYC_LDO_ENABLE_YES          (1 << (USBPHYC_LDO_ENABLE_SHIFT))
#define USBPHYC_LDO_STATUS_SHIFT        (1)
#define USBPHYC_LDO_STATUS_MASK         (1 << (USBPHYC_LDO_STATUS_SHIFT))
#define USBPHYC_LDO_USED_SHIFT          (0)
#define USBPHYC_LDO_USED_MASK           (1 << (USBPHYC_LDO_USED_SHIFT))

#define USBPHYC_LDO_DISABLE_SHIFT       (2)
#define USBPHYC_LDO_DISABLE_MASK        (1 << (USBPHYC_LDO_DISABLE_SHIFT))
#define USBPHYC_LDO_DISABLE_NO          (0 << (USBPHYC_LDO_DISABLE_SHIFT))
#define USBPHYC_LDO_DISABLE_YES         (1 << (USBPHYC_LDO_DISABLE_SHIFT))
} stm32Dev_USBPHYC;

#endif

/*
 * Copyright (c) 2019 zhtlab
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files
 * (the "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to permit
 * persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be included
 * in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#ifndef _STM32F4FLASH_H_
#define _STM32F4FLASH_H_

#define FLASH_PAGE_SIZE                 2048
#define FLASH_ERASED_VALUE              0xff
#define FLASH_ERASED_VALUE32            0xffffffff

typedef struct {
  __IO uint32_t		ACR;
#define FLASH_ACR_DCRST_SHIFT (12)
#define FLASH_ACR_DCRST_MASK  (1 << (FLASH_ACR_DCRST_SHIFT))
#define FLASH_ACR_DCRST_NO    (0 << (FLASH_ACR_DCRST_SHIFT))
#define FLASH_ACR_DCRST_YES   (1 << (FLASH_ACR_DCRST_SHIFT))
#define FLASH_ACR_ICRST_SHIFT (11)
#define FLASH_ACR_ICRST_MASK  (1 << (FLASH_ACR_ICRST_SHIFT))
#define FLASH_ACR_ICRST_NO    (0 << (FLASH_ACR_ICRST_SHIFT))
#define FLASH_ACR_ICRST_YES   (1 << (FLASH_ACR_ICRST_SHIFT))
#define FLASH_ACR_DCEN_SHIFT  (10)
#define FLASH_ACR_DCEN_MASK   (1 << (FLASH_ACR_DCEN_SHIFT))
#define FLASH_ACR_DCEN_NO     (0 << (FLASH_ACR_DCEN_SHIFT))
#define FLASH_ACR_DCEN_YES    (1 << (FLASH_ACR_DCEN_SHIFT))
#define FLASH_ACR_ICEN_SHIFT  (9)
#define FLASH_ACR_ICEN_MASK   (1 << (FLASH_ACR_ICEN_SHIFT))
#define FLASH_ACR_ICEN_NO     (0 << (FLASH_ACR_ICEN_SHIFT))
#define FLASH_ACR_ICEN_YES    (1 << (FLASH_ACR_ICEN_SHIFT))
#define FLASH_ACR_PREFTEN_SHIFT (8)
#define FLASH_ACR_PREFTEN_MASK  (1 << (FLASH_ACR_PREFTEN_SHIFT))
#define FLASH_ACR_PREFTEN_NO    (0 << (FLASH_ACR_PREFTEN_SHIFT))
#define FLASH_ACR_PREFTEN_YES   (1 << (FLASH_ACR_PREFTEN_SHIFT))
#define FLASH_LATENCY_SHIFT	(0)
#define FLASH_LATENCY_MASK      (15 << (FLASH_LATENCY_SHIFT))
#define FLASH_LATENCY_NONE      (0 << (FLASH_LATENCY_SHIFT))
#define FLASH_LATENCY_1CLK	(1 << (FLASH_LATENCY_SHIFT))
#define FLASH_LATENCY_2CLK	(2 << (FLASH_LATENCY_SHIFT))
#define FLASH_LATENCY_3CLK	(3 << (FLASH_LATENCY_SHIFT))
#define FLASH_LATENCY_4CLK	(4 << (FLASH_LATENCY_SHIFT))
#define FLASH_LATENCY_CLK(x)	((x) << (FLASH_LATENCY_SHIFT)) & FLASH_LATENCY_MASK

  __IO uint32_t		KEYR;           /* 0x04   for unlock */
#define KEYR_KEY1	0x45670123
#define KEYR_KEY2	0xcdef89ab
#define FLASH_PKEY1             0x45670123
#define FLASH_PKEY2             0xcdef89ab
#define FLASH_PRGKEY1             0x45670123
#define FLASH_PRGKEY2             0xcdef89ab
  __IO uint32_t		POPTKEYR;        /* 0x08   for option */
#define OPTKEYR_KEY1	0x08192a3b
#define OPTKEYR_KEY2	0x4c5d6e7f
#define FLASH_OPTKEYR1          0x08192a3b
#define FLASH_OPTKEYR2          0x4c5d6e7f

  __IO uint32_t		SR;             /* 0x0c */
#define FLASH_SR_BSY_SHIFT		16
#define FLASH_SR_BSY_MASK		(1 << (FLASH_SR_BSY_SHIFT))
#define FLASH_SR_BSY_NO		(0 << (FLASH_SR_BSY_SHIFT))
#define FLASH_SR_BSY_YES		(1 << (FLASH_SR_BSY_SHIFT))
#define FLASH_SR_RDERR_SHIFT		8
#define FLASH_SR_RDERR_MASK		(1 << (FLASH_SR_RDERR_SHIFT))
#define FLASH_SR_RDERR_NO		(0 << (FLASH_SR_RDERR_SHIFT))
#define FLASH_SR_RDERR_YES		(1 << (FLASH_SR_RDERR_SHIFT))
#define FLASH_SR_ERASEERR_SHIFT		7
#define FLASH_SR_ERASEERR_MASK		(1 << (FLASH_SR_ERASEERR_SHIFT))
#define FLASH_SR_ERASEERR_NO		(0 << (FLASH_SR_ERASEERR_SHIFT))
#define FLASH_SR_ERASEERR_YES		(1 << (FLASH_SR_ERASEERR_SHIFT))
#define FLASH_SR_PGPERR_SHIFT		6
#define FLASH_SR_PGPERR_MASK		(1 << (FLASH_SR_PGPERR_SHIFT))
#define FLASH_SR_PGPERR_NO		(0 << (FLASH_SR_PGPERR_SHIFT))
#define FLASH_SR_PGPERR_YES		(1 << (FLASH_SR_PGPERR_SHIFT))
#define FLASH_SR_PGAERR_SHIFT		5
#define FLASH_SR_PGAERR_MASK		(1 << (FLASH_SR_PGAERR_SHIFT))
#define FLASH_SR_PGAERR_NO		(0 << (FLASH_SR_PGAERR_SHIFT))
#define FLASH_SR_PGAERR_YES		(1 << (FLASH_SR_PGAERR_SHIFT))
#define FLASH_SR_WRPERR_SHIFT		4
#define FLASH_SR_WRPERR_MASK		(1 << (FLASH_SR_WRPERR_SHIFT))
#define FLASH_SR_WRPERR_NO		(0 << (FLASH_SR_WRPERR_SHIFT))
#define FLASH_SR_WRPERR_YES		(1 << (FLASH_SR_WRPERR_SHIFT))
#define FLASH_SR_OPERR_SHIFT		1
#define FLASH_SR_OPERR_MASK		(1 << (FLASH_SR_OPERR_SHIFT))
#define FLASH_SR_OPERR_NO		(0 << (FLASH_SR_OPERR_SHIFT))
#define FLASH_SR_OPERR_YES		(1 << (FLASH_SR_OPERR_SHIFT))
#define FLASH_SR_EOP_SHIFT		0
#define FLASH_SR_EOP_MASK		(1 << (FLASH_SR_EOP_SHIFT))
#define FLASH_SR_EOP_NO		(0 << (FLASH_SR_EOP_SHIFT))
#define FLASH_SR_EOP_YES		(1 << (FLASH_SR_EOP_SHIFT))

  __IO uint32_t		PECR;           /* 0x10 */
#define FLASH_PECR_LOCK_SHIFT		31
#define FLASH_PECR_LOCK_MASK		(1UL << (FLASH_PECR_LOCK_SHIFT))
#define FLASH_PECR_LOCK_NO		(0UL << (FLASH_PECR_LOCK_SHIFT))
#define FLASH_PECR_LOCK_YES		(1UL << (FLASH_PECR_LOCK_SHIFT))
#define FLASH_PECR_ERRIE_SHIFT		25
#define FLASH_PECR_ERRIE_MASK		(1 << (FLASH_PECR_ERRIE_SHIFT))
#define FLASH_PECR_ERRIE_NO		(0 << (FLASH_PECR_ERRIE_SHIFT))
#define FLASH_PECR_ERRIE_YES		(1 << (FLASH_PECR_ERRIE_SHIFT))
#define FLASH_PECR_EOPIE_SHIFT		24
#define FLASH_PECR_EOPIE_MASK		(1 << (FLASH_PECR_EOPIE_SHIFT))
#define FLASH_PECR_EOPIE_NO		(0 << (FLASH_PECR_EOPIE_SHIFT))
#define FLASH_PECR_EOPIE_YES		(1 << (FLASH_PECR_EOPIE_SHIFT))
#define FLASH_PECR_STRT_SHIFT		16
#define FLASH_PECR_STRT_MASK		(1 << (FLASH_PECR_STRT_SHIFT))
#define FLASH_PECR_STRT_NO		(0 << (FLASH_PECR_STRT_SHIFT))
#define FLASH_PECR_STRT_YES		(1 << (FLASH_PECR_STRT_SHIFT))
#define FLASH_PECR_PSIZE_SHIFT		8
#define FLASH_PECR_PSIZE_MASK		(3 << (FLASH_PECR_PSIZE_SHIFT))
#define FLASH_PECR_PSIZE_X8		(0 << (FLASH_PECR_PSIZE_SHIFT))
#define FLASH_PECR_PSIZE_X16		(1 << (FLASH_PECR_PSIZE_SHIFT))
#define FLASH_PECR_PSIZE_X32		(2 << (FLASH_PECR_PSIZE_SHIFT))
#define FLASH_PECR_PSIZE_X64		(3 << (FLASH_PECR_PSIZE_SHIFT))
#define FLASH_PECR_PNB_SHIFT		3
#define FLASH_PECR_SNB_MASK		(0xf << (FLASH_PECR_PNB_SHIFT))
#define FLASH_PECR_SNB_SECT(x)		((x) << (FLASH_PECR_PNB_SHIFT))
#define FLASH_PECR_MER_SHIFT		2
#define FLASH_PECR_MER_MASK		(1 << (FLASH_PECR_MER_SHIFT))
#define FLASH_PECR_MER_NO		(0 << (FLASH_PECR_MER_SHIFT))
#define FLASH_PECR_MER_YES		(1 << (FLASH_PECR_MER_SHIFT))
#define FLASH_PECR_SER_SHIFT		1
#define FLASH_PECR_SER_MASK		(1 << (FLASH_PECR_SER_SHIFT))
#define FLASH_PECR_SER_NO		(0 << (FLASH_PECR_SER_SHIFT))
#define FLASH_PECR_SER_YES		(1 << (FLASH_PECR_SER_SHIFT))
#define FLASH_PECR_PG_SHIFT		0
#define FLASH_PECR_PG_MASK		(1 << (FLASH_PECR_PG_SHIFT))
#define FLASH_PECR_PG_NO		(0 << (FLASH_PECR_PG_SHIFT))
#define FLASH_PECR_PG_YES		(1 << (FLASH_PECR_PG_SHIFT))

  __IO uint32_t		OPTCR;  /* 0x14 */
  __IO uint32_t		OPTCR1;  /* 0x18 */
  __IO uint32_t		OPTCR2;  /* 0x1c */
} stm32Dev_FLASH;

#define FLASH_PECR_PRGLOCK_MASK FLASH_PECR_LOCK_MASK
#define FLASH_PECR_PELOCK_MASK  FLASH_PECR_LOCK_MASK
#define FLASH_PECR_FPRG_YES     0
#define FLASH_PECR_PROG_YES     0
#define FLASH_PECR_ERASE_YES    0
#define FLASH_PECR_DATA_YES     0
#endif
